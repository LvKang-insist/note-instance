## 对称加密

-  使用秘钥和加密算法对数据进行转换，得到的无意义数据以为密文；使用秘钥和解密算法对密文进行逆向转换，得到的数据即为原数据。

![1592311943790](L2_编码，加密，Hash，序列号和字符集.assets/1592311943790.png)

​		 首先通过加密算法进行加密，然后在进行发送，目标收到密文后就会通过解密算法进行解密

- 对称加密对任何的二进制数据都可以进行加密。

- 经典算法：DES，AES

   由于 DES 秘钥太短，导致被弃用了，如果秘钥太短就会导致容易破解，为什么呢？如果暴力进行破解，秘钥的长度太短，就会导致这个秘钥很快被试完，然后就会被破解。

   现在主流都是 AES 。这两个都是对称加密。

   

   ## 非对称加密

   - 使用公钥对数据进行加密得到密文；使用私钥对数据进行解密得到原数据。

      ![1592313023502](L2_编码，加密，Hash，序列号和字符集.assets/1592313023502.png)

      和对称加密不同的是：在非对称加密中解密的时候用的还是加密算法，但是秘钥却不同了

      例子：比如双方要进行通信，**通信的内容只有10 个字符，分别是 0,1,2,3,4,5,6,7,8,9。加密秘钥：对每个字符+4，解密秘钥：对每个字符 +6**

      发送消息：110

      加密：554

      解密：5+6 = 11，拿到溢出的就是1，中间的也一样，最后面的就是 4+6 = 10，拿到后面溢出的就是 0，最后的结果就是 110。

      **当然这个是禁不起推敲的，但是他可以解释非对称加密的核心原理，其中最主要的就是溢出**。如果不允许溢出，那么非对称加密就没办法玩了。